pipeline {
    agent any
    environment {
        VIRTUAL_ENV = 'venv'
        PYTHON = 'C:\\Users\\user\\AppData\\Local\\Programs\\Python\\Python312\\python.exe'
    }
    stages {
        stage('Setup') {
            steps {
                script {
                    if (!fileExists("${env.WORKSPACE}\\${VIRTUAL_ENV}")) {
                        bat "${env.PYTHON} -m venv ${VIRTUAL_ENV}"
                    }
                    bat ".\\${VIRTUAL_ENV}\\Scripts\\activate && ${env.PYTHON} -m pip install -r requirements.txt"
                }
            }
        }
        
        stage('Lint') {
            steps {
                script {
                    bat ".\\${VIRTUAL_ENV}\\Scripts\\activate && ${env.PYTHON} -m flake8 app.py"
                }
            }
        }
        
        stage('Test') {
            steps {
                script {
                    bat ".\\${VIRTUAL_ENV}\\Scripts\\activate && ${env.PYTHON} -m pytest"
                }
            }
        }

        stage('Code Coverage') {
            steps {
                script {
                    bat ".\\${VIRTUAL_ENV}\\Scripts\\activate && ${env.PYTHON} -m pip install coverage"
                    bat ".\\${VIRTUAL_ENV}\\Scripts\\activate && .\\${VIRTUAL_ENV}\\Scripts\\coverage run -m pytest"
                    bat ".\\${VIRTUAL_ENV}\\Scripts\\activate && .\\${VIRTUAL_ENV}\\Scripts\\coverage report"
                    bat ".\\${VIRTUAL_ENV}\\Scripts\\activate && .\\${VIRTUAL_ENV}\\Scripts\\coverage html"
                }
            }
            post {
                always {
                    archiveArtifacts artifacts: 'htmlcov/**', allowEmptyArchive: true
                }
            }
        }
        
        stage('Security Scan') {
            steps {
                script {
                    bat ".\\${VIRTUAL_ENV}\\Scripts\\activate && ${env.PYTHON} -m pip install bandit"
                    bat ".\\${VIRTUAL_ENV}\\Scripts\\activate && .\\${VIRTUAL_ENV}\\Scripts\\bandit -r . -o bandit_report.txt"
                }
            }
            post {
                always {
                    archiveArtifacts artifacts: 'bandit_report.txt', allowEmptyArchive: true
                }
            }
        }
        
        stage('Deploy') {
            steps {
                script {
                    echo "Deploying application..."
                    // Create a 'deploy' directory and copy files to simulate deployment
                    bat "if not exist deploy mkdir deploy"
                    bat "xcopy * deploy /E /Y"  // Copies all files to 'deploy' directory
                    echo "Deployment to 'deploy' directory complete."
                }
            }
        }
    }
    post {
        always {
            cleanWs()
        }
    }
}
